będą 3 tablice 8x8 zawierające wartości True oraz False

tablica 1 : Wszystkie wolne miejsca na mapie == False , Wszystkie zajęte miejsca na mapie == True

tablica 2 : w miejscach w których są sojusznicy True, wrogowie false. 
tablica 2(inna opcja) - Bazując na koordynatach pionka na którym jest teraz focus sprawdź gdzie można skoczyć "Za" przeciwnika. Jeżeli pójdziesz na wartość false 
to przeciwnik który znajdował się między pozycją początkową pionka a docelową zostaje zniszczony.
tablica 3: decyduje gdzie pionek może się poruszyć. [ Wymaga danych z tablicy nr 1]. Ta tablica mówi, że nie wolno się poruszać w miejsca oddalone o 2 od pionka, tam gdzie jest 
ściana, oraz tam gdzie są jakiekolwiek inne pionki. JEŻELI TABLICA 2(Inna opcja) mówi, że można się poruszyć w jakieś miejsce, to mimo tego, że wg tablicy 3 nie można się tam
przesunąć to i tak można się tam przesunąć.

--------------------------------------------------------------
w trakcie pisania tego powyżej doszedłem do wniosku, że chyba jednak jest potrzebnie 5 tablic

1: Pozycje pionków
2: Przynależność pionków:
3. Możliwe ruchy pionka ( o 1 od miejsca w którym stoi, tylko do przodu) 
4. Możliwe miejsca ataku ( możliwa do obliczenia jeżeli masz pozycja pionka + pozycja wrogich pionków). Ta tablica ma wyższy priorytet od innych tablic.
5. Sumująca tablica [ sumuje wartości z [1,3] oraz nadpisuje je tablicą numer 4.

__________________________________
a może tablica nr 5 nie powinna być True False. i np 
zajete miejsca = 0
wolne miejsca = 1
wolne miejsca, ale atakujące ( te z tablicy nr 4) = 2

____________________________________
szybkie sumowanie bootleanow 
https://stackoverflow.com/questions/63446201/fast-way-to-do-a-boolean-check-between-two-lists-in-list-comprehension-in-python
[l1[i] or l2[i] for i in range(len(l1))]

____________________________________________

https://stackoverflow.com/questions/13614452/python-multidimensional-boolean-array
